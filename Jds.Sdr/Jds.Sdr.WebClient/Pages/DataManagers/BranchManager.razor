@page "/BranchsViewer"
@inherits DataManagerBaseComponent<BranchView>

<PageTitle>
	@($"{BranchManager.ComponentInformation.Title} - {Application.Title}")
</PageTitle>

<AuthorizeView Context="authorizeViewContext"
			   Roles="@RoleDefinitions.All">
	<Authorized>
		<DxDataGrid @ref="DataGrid"
					DataAsync="GetDataAsync"
					SingleSelectedDataRow="SelectedModel"
					SingleSelectedDataRowChanged="OnSelectedModelChanged"
					KeyFieldName="Id"
					EditMode="DataGridEditMode.PopupEditForm"
					CssClass="text-primary jd-grid-header"
					DataRowCssClass="jd-table-alt-row text-primary"
					PopupEditFormCssClass="jd-edit-form"
					PopupEditFormHeaderText="@string.Format("{0} {1}",
										(DataOperation == DataOperation.Insert ? DialogButtonTexts.Add : DialogButtonTexts.Edit),
                                        BranchManager.ComponentInformation.EntitySingularName)"
					ShowFilterRow="ShowFilterRow"
					ShowGroupPanel="true"
					PagerPageSizeSelectorVisible="true"
					PagerAllDataRowsItemVisible="true"
					PagerAllowedPageSizes="AllowedPageSizes"
					PageSize="DefaultPageSize"
					PagerNavigationMode=PagerNavigationMode.InputBox
					RowEditStart="OnRowEditStarting"
					RowClick="OnRowClick"
					LayoutRestoring="@OnLayoutRestoring"
					LayoutChanged="@OnLayoutChanged">
			<HeaderTemplate>
				<DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Plain" CssClass="text-primary">
					<DxDataGridColumnChooserToolbarItem Alignment="ToolbarItemAlignment.Right" />
					<DxToolbarItem>
						<Template>
							<div class="fw-bold p-1">
								<span class="fas fa-@(BranchManager.ComponentInformation.IconCssClass)"></span>
								<span class="ms-1">@BranchManager.ComponentInformation.Title</span>
							</div>
						</Template>
					</DxToolbarItem>
					<DxToolbarItem Text="@ToolbarButtonTexts.New"
								   CssClass="text-primary"
								   IconCssClass="fas fa-circle-plus"
								   Tooltip="@ToolbarTooltipTexts.New"
								   BeginGroup="true"
								   Click="OnAddNewClick" />
					<DxToolbarItem Text="@ToolbarButtonTexts.Edit"
								   CssClass="text-primary"
								   IconCssClass="fas fa-pencil-alt"
								   Tooltip="@ToolbarTooltipTexts.Edit"
								   Enabled="IsAnyRowSelected && CanEditSelectedModel"
								   Click="OnEditClick" />
					<DxToolbarItem Text="@ToolbarButtonTexts.Delete"
								   CssClass="text-primary"
								   IconCssClass="fas fa-trash-alt"
								   Tooltip="@ToolbarTooltipTexts.Delete"
								   Enabled="IsAnyRowSelected && CanDeleteSelectedModel"
								   Click="OnDeleteClick" />
					<DxToolbarItem Text="@ToolbarButtonTexts.Update"
								   CssClass="text-primary"
								   IconCssClass=" fas fa-rotate"
								   Tooltip="@ToolbarTooltipTexts.Update"
								   BeginGroup="true"
								   Click="OnUpdateClick" />
					<DxToolbarItem Text="@(ShowFilterRow ? ToolbarButtonTexts.HideFilters : ToolbarButtonTexts.ShowFilters)"
								   CssClass="text-primary"
								   IconCssClass=" fas fa-filter"
								   Tooltip="@ToolbarTooltipTexts.ShowHideFilters"
								   BeginGroup="true"
								   Checked="ShowFilterRow"
								   Click="OnShowFilterRowClick" />
				</DxToolbar>
			</HeaderTemplate>
			<Columns>
				<DxDataGridColumn Field="@nameof(BranchView.Name)"
								  Caption="@AttributeReader.GetName(nameof(BranchView.Name))" />
				<DxDataGridColumn Field="@nameof(BranchView.Location)"
								  Caption="@AttributeReader.GetName(nameof(BranchView.Location))" />
			</Columns>
			<EditFormTemplate>
				<EditForm Model="EditContext.DataItem"
						  Context="EditFormContext"
						  OnValidSubmit="HandleValidSubmitAsync"
						  OnInvalidSubmit="HandleInvalidSubmitAsync">
					<DataAnnotationsValidator></DataAnnotationsValidator>
					<DxFormLayout CaptionPosition="CaptionPosition.Vertical">
						<DxFormLayoutGroup Caption="Datos Generales"
										   ColSpanMd="12">
							<DxFormLayoutItem Caption="@AttributeReader.GetName(nameof(BranchView.Name))"
											  ColSpanMd="12" ColSpanSm="12" ColSpanXs="12"
											  Context="FormLayoutContext"
											  CssClass="text-primary">
								<Template>
									<DxTextBox @bind-Text="@EditContext.DataItem.Name" />
									<ValidationMessage For="@(() => EditContext.DataItem.Name)" />
								</Template>
							</DxFormLayoutItem>
							<DxFormLayoutItem Caption="@AttributeReader.GetName(nameof(BranchView.Location))"
											  ColSpanMd="12" ColSpanSm="12" ColSpanXs="12"
											  Context="FormLayoutContext"
											  CssClass="text-primary">
								<Template>
									<DxMemo @bind-Text="@EditContext.DataItem.Location"
											Rows="2" />
									<ValidationMessage For="@(() => EditContext.DataItem.Location)" />
								</Template>
							</DxFormLayoutItem>
						</DxFormLayoutGroup>
						<DxFormLayoutItem ColSpanMd="12"
										  Context="FormLayoutContext">
							<Template>
								<EditFormButtons IsSavingChanges="IsSavingChanges"
												 SubmitFormOnClick="true"
												 DataOperation="DataOperation"
												 OnClickCancelButton="OnCancelButtonClick" />
							</Template>
						</DxFormLayoutItem>
					</DxFormLayout>
				</EditForm>
			</EditFormTemplate>
		</DxDataGrid>
		<PopupMessage HeaderText="@DialogHeaderTexts.Confirmation"
					  Message="@DialogMessages.ConfirmDelete"
					  Icon="PopupMessageIcon.Question"
					  ButtonDefaultText="PopupMessageButtonDefaultText.YesNo"
					  Visible="@ConfirmationDialogVisible"
					  DefaultFirstButtonOnClick="@DeleteItemsAsync"
					  DefaultSecondButtonOnClick="@OnCancelButtonClick" />
		<ToastMessage @ref="ToastMessage" />
	</Authorized>
	<NotAuthorized>
		@{
			NavigationManager.NavigateTo(RouteAttributeReader.GetValue(typeof(Login)));
		}
	</NotAuthorized>
</AuthorizeView>